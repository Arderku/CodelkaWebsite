name: Deploy Next.js app to Pages

on:
  push:
    branches: ["main"]   # Adjust if your default branch is named differently
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout your repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Detect package manager (yarn or npm) in `codelka/` folder
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/codelka/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/codelka/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            # Fallback if no lock file is found
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          fi

      # 3) Setup Node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # (Optional) Cache the .next folder if you like:
      # - name: Restore cache
      #   uses: actions/cache@v4
      #   with:
      #     path: codelka/.next
      #     key: ${{ runner.os }}-next-build-${{ hashFiles('codelka/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-next-build-

      # 4) Install dependencies in `codelka/`
      - name: Install dependencies
        run: |
          cd codelka
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # 5) Build Next.js
      #    If output: "export" is in next.config.js, it auto-creates `out/` in codelka/
      - name: Build Next.js
        run: |
          cd codelka
          ${{ steps.detect-package-manager.outputs.manager }} run build

      # 6) Upload the static export from `codelka/out`
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: codelka/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
